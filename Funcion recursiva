; Link para correr el programa: https://onecompiler.com/commonlisp/3zmrxc7hf

(defun hacer-lista-asientos (asientos nombres)
  ; Verifica si la lista de asientos está vacía
  (if (null asientos)
      ; Si está vacía, devuelve una lista vacía
      nil
      ; Si no está vacía, crea una lista combinada
      (let ((primer-asiento (first asientos)) ; Obtiene el primer asiento
            (primer-nombre (first nombres)) ; Obtiene el primer nombre
            (resto-asientos (rest asientos)) ; Obtiene el resto de asientos
            (resto-nombres (rest nombres))) ; Obtiene el resto de nombres
        
        ; Llama recursivamente con el resto de asientos y nombres
        (let ((lista-combinada (hacer-lista-asientos resto-asientos resto-nombres)))
          
          ; Agrega el primer asiento y nombre a la lista combinada
          (cons primer-asiento (cons primer-nombre lista-combinada))))))

; Llama a la función con los valores de ejemplo y la imprime
(print (hacer-lista-asientos '(1 2 3 4) '(Hector Harlit Enmanuel Estevez)))

; Imprime:
; (1 Hector 2 Harlit 3 Enmanuel 4 Estevez)
